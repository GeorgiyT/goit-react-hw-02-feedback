{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedBack/FeedBack.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","el","type","name","toLowerCase","onClick","Notification","title","Section","children","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","addFeed","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAceA,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAE,OACb,wBAAiBC,KAAK,SAASC,KAAMF,EAAGG,cAAeC,QAASN,EAAhE,SACGE,GADUA,SCANK,EAJM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OAAO,4BAAIA,KCcEC,EAdC,SAAC,GAA8B,IAAD,IAA3BD,aAA2B,MAAnB,GAAmB,EAAfE,EAAe,EAAfA,SAC7B,OACE,oCACGF,GAAS,6BAAKA,IACdE,MCOQC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SC2CdC,E,4MA7CbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,QAAU,CAAC,OAAQ,UAAW,O,EAE9BoB,QAAU,SAAAC,GACR,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOnB,KAAOkB,EAAUF,EAAEG,OAAOnB,MAAQ,O,EAIhDoB,mBAAqB,WACnB,OAAO,EAAKN,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3DW,gCAAkC,kBAAMC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMN,KAAc,EAAKY,uB,4CAElF,WACE,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBT,QAAS6B,KAAK7B,QAASC,gBAAiB4B,KAAKT,YAGhE,cAAC,EAAD,CAASX,MAAM,aAAf,SACGoB,KAAKJ,qBACJ,cAAC,EAAD,CACEZ,KAAMgB,KAAKV,MAAMN,KACjBC,QAASe,KAAKV,MAAML,QACpBC,IAAKc,KAAKV,MAAMJ,IAChBC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,oCAG3B,cAAC,EAAD,CAAcjB,MAAM,+B,GAtCTqB,IAAMC,WCKdC,EARH,WACV,OACE,mCACE,cAAC,EAAD,O,YCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.874b6ebf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(el => (\r\n        <button key={el} type=\"button\" name={el.toLowerCase()} onClick={onLeaveFeedback}>\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ title }) => {\r\n  return <p>{title}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title = \"\", children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive Feedback: {positivePercentage}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport Section from \"../Section/Section\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  options = [\"Good\", \"Neutral\", \"Bad\"];\r\n\r\n  addFeed = e => {\r\n    this.setState(prevState => ({\r\n      [e.target.name]: prevState[e.target.name] + 1\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => Math.round((this.state.good * 100) / this.countTotalFeedback());\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions options={this.options} onLeaveFeedback={this.addFeed} />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification title=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\nimport Feedback from \"./FeedBack/FeedBack\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Feedback />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}